name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: start mysql
      run: sudo /etc/init.d/mysql start
    - name: Install Dependencies
      run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: create database
      env:
        DB_DATABASE: aisha_test
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_DATABASE_TEST: aisha_test
        DB_USERNAME_TEST: root
        DB_PASSWORD_TEST: root
      run: mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE_TEST }};' -u${{ env.DB_USERNAME_TEST }} -p${{ env.DB_PASSWORD_TEST }} && php artisan migrate:fresh --database=mysql_testing && php artisan db:seed
    - name: running tests
      env:
        DB_DATABASE_TEST: aisha_test
        DB_USERNAME_TEST: root
        DB_PASSWORD_TEST: root
        DB_PASSWORD: root
      run: php artisan test
# https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
# name: Laravel

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   laravel-tests:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#       with:
#         php-version: '8.0'
#     - uses: actions/checkout@v3
#     - name: Copy .env
#       run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#     - name: Install Dependencies
#       run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#     - name: Generate key
#       run: php artisan key:generate
#     - name: Directory Permissions
#       run: chmod -R 777 storage bootstrap/cache
#     - name: Create Database
#       env:
#         DB_CONNECTION: sqlite
#         DB_DATABASE: database/database.sqlite
#       run: |
#         mkdir -p database
#         touch database/database.sqlite
#         php artisan migrate:fresh --seed --database="sqlite"
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DB_CONNECTION: sqlite
#         DB_DATABASE: database/database.sqlite
#       run: php artisan test
